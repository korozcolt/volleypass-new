{
	"info": {
		"_postman_id": "volleypass-api-v1",
		"name": "VolleyPass API v1",
		"description": "Colección completa de la API pública de VolleyPass v1. Incluye todos los endpoints para torneos, partidos y jugadores.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Tournaments",
			"item": [
				{
					"name": "List All Tournaments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is JSON\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response has data property\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/public/tournaments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"public",
								"tournaments"
							]
						},
						"description": "Obtiene la lista de todos los torneos públicos disponibles."
					},
					"response": []
				},
				{
					"name": "Get Tournament Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has tournament data\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData.data).to.have.property('id');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/public/tournaments/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"public",
								"tournaments",
								"1"
							]
						},
						"description": "Obtiene los detalles completos de un torneo específico. Cambia el ID en la URL según necesites."
					},
					"response": []
				},
				{
					"name": "Get Tournament Standings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has standings data\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/public/tournaments/1/standings",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"public",
								"tournaments",
								"1",
								"standings"
							]
						},
						"description": "Obtiene la tabla de posiciones de un torneo específico."
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados con torneos"
		},
		{
			"name": "Matches",
			"item": [
				{
					"name": "Get Scheduled Matches",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has matches data\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/public/matches/scheduled",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"public",
								"matches",
								"scheduled"
							]
						},
						"description": "Obtiene todos los partidos programados."
					},
					"response": []
				},
				{
					"name": "Get Live Matches",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has matches data\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/public/matches/live",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"public",
								"matches",
								"live"
							]
						},
						"description": "Obtiene todos los partidos que están siendo jugados actualmente."
					},
					"response": []
				},
				{
					"name": "Get Match Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has match data\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data');",
									"    pm.expect(jsonData.data).to.have.property('id');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/public/matches/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"public",
								"matches",
								"1"
							]
						},
						"description": "Obtiene los detalles completos de un partido específico. Cambia el ID en la URL según necesites."
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados con partidos"
		},
		{
			"name": "Players",
			"item": [
				{
					"name": "Get Match Players",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 404\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Response has players data\", function () {",
									"        const jsonData = pm.response.json();",
									"        pm.expect(jsonData).to.have.property('data');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/public/matches/1/players",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"public",
								"matches",
								"1",
								"players"
							]
						},
						"description": "Obtiene la lista de jugadores participantes en un partido específico. Nota: Este endpoint puede devolver errores si no hay datos de jugadores."
					},
					"response": []
				},
				{
					"name": "Get Team Players",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 404\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
									"});",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Response has players data\", function () {",
									"        const jsonData = pm.response.json();",
									"        pm.expect(jsonData).to.have.property('data');",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/public/teams/1/players",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"public",
								"teams",
								"1",
								"players"
							]
						},
						"description": "Obtiene la lista de jugadores de un equipo específico. Nota: Este endpoint puede devolver errores si no hay datos de jugadores."
					},
					"response": []
				}
			],
			"description": "Endpoints relacionados con jugadores"
		},
		{
			"name": "Health Check",
			"item": [
				{
					"name": "API Health Check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"API is accessible\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
									"});",
									"",
									"pm.test(\"Response time is acceptable\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(5000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/public/tournaments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"public",
								"tournaments"
							]
						},
						"description": "Verificación básica de que la API está funcionando correctamente."
					},
					"response": []
				}
			],
			"description": "Verificación de estado de la API"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Configuración global para deshabilitar verificación SSL",
					"pm.request.headers.add({key: 'Accept', value: 'application/json'});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Test global para verificar que la respuesta no esté vacía",
					"pm.test(\"Response is not empty\", function () {",
					"    pm.expect(pm.response.text()).to.not.be.empty;",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://volleypass-new.test",
			"type": "string"
		}
	]
}